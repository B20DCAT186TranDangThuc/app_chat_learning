import tkinter as tk
from tkinter import messagebox

class Signup:
    def __init__(self, master, login_callback, signup_callback):
        self.master = master
        self.login_callback = login_callback
        self.signup_callback = signup_callback
        
        # Create widgets
        self.username_label = tk.Label(master, text="Username:")
        self.username_entry = tk.Entry(master)
        self.password_label = tk.Label(master, text="Password:")
        self.password_entry = tk.Entry(master, show="*")
        self.confirm_label = tk.Label(master, text="Confirm Password:")
        self.confirm_entry = tk.Entry(master, show="*")
        self.signup_button = tk.Button(master, text="Signup", command=self.signup)
        self.login_button = tk.Button(master, text="Login", command=self.show_login)
        
        # Layout widgets
        self.username_label.pack()
        self.username_entry.pack()
        self.password_label.pack()
        self.password_entry.pack()
        self.confirm_label.pack()
        self.confirm_entry.pack()
        self.signup_button.pack()
        self.login_button.pack()

    def signup(self):
        # Get username and password from input fields
        username = self.username_entry.get()
        password = self.password_entry.get()
        confirm_password = self.confirm_entry.get()
        
        # Validate username and password (optional)
        if not self.validate(username, password, confirm_password):
            return
        
        # Register user in database or API
        # If successful, call signup_callback with username as argument
        if self.register_user(username, password):
            self.signup_callback(username)

    def show_login(self):
        # Destroy signup interface and call login_callback to show login interface
        self.destroy()
        self.login_callback()

    def destroy(self):
        # Destroy all widgets in the signup interface and clean up resources
        self.username_label.destroy()
        self.username_entry.destroy()
        self.password_label.destroy()
        self.password_entry.destroy()
        self.confirm_label.destroy()
        self.confirm_entry.destroy()
        self.signup_button.destroy()
        self.login_button.destroy()

    def validate(self, username, password, confirm_password):
        # Validate username and password input (optional)
        if not username:
            messagebox.showerror("Error", "Please enter a username")
            return False
        elif not password:
            messagebox.showerror("Error", "Please enter a password")
            return False
        elif password != confirm_password:
            messagebox.showerror("Error", "Passwords do not match")
            return False
        else:
            return True

    def register_user(self, username, password):
        # Register user in database or API
        # Return True if registration is successful, False otherwise
        # You will need to implement this method based on your authentication system
       pass